Library ieee;
use ieee.std_logic_1164.all;

entity CPU is
port(
_Clk : in std_logic;
_PC : out std_logic_vector(31 downto 0)
);
end CPU;

architecture arch of CPU is
begin

component fetchUnit is
port(
clk, PC_source : in std_logic;
branchoffset : in std_logic_vector(31 downto 0);
opcode: out std_logic_vector(5 downto 0);
rs,rt,rd : out std_logic_vector(4 downto 0);
immd : out std_logic_vector(15 downto 0)
);
end component;


component RegUnitFetch is
port(
  rs,rt,rd: in std_logic_vector(4 downto 0);
  write_Data : in std_logic_vector(31 downto 0);
  busA, busB : out std_logic_vector(31 downto 0);
  
  regWrite, regDst: in std_logic;
  
  in_unExt : in std_logic_vector(15 downto 0);
  ext_imm : out std_logic_vector(31 downto 0)
);
end component;


component OperationALU is
port( Abus, Bbus, extimm : in  std_logic_vector(31 downto 0);
    aluSource :in std_logic;
	 ALUOP :in std_logic_vector(2 downto 0);
	 ALUresult: out std_logic_vector(31 downto 0);
		Zero : out std_logic
	 );
end component;


component Datafetch is 
port(
AlU_result, write_Data : in std_logic_vector(31 downto 0);
memWrite, memRead, MemtoReg : in std_logic;
Data_Write : out std_logic_vector(31 downto 0)
);
end component;


component CPUController is
port(
OpCode : in std_logic_vector(5 downto 0);
RegDst, branch, MemRead,MemtoReg,MemWrite,ALUSrc,RegWrite: out std_logic;
ALUOP : out std_logic_vector(2 downto 0));
end component;


signal _RegDst,_Branch,_MemRead,_MemtoReg,_Memwrite,_ALUSrc, _Regwrite, _zero : std_logic;
signal _ALUOP : std_logic_vector(2 downto 0);
signal _ExtImmd : std_logic_vector(31 downto 0);
signal _opcode : std_logic_vector(5 downto 0);
signal _rs, _rt, _rd : std_logic_vector(4 downto 0);
signal _immd : std_logic_vector(15 downto 0);

signal _writeData, _busA,_busB : std_logic_vector(31 downto 0);



begin

InstFetchUnit: fetchUnit port map(_Clk,(_Branch and _zero),(to_stdlogicvector(to_bitvector(_ExtImmd) sll 2)),
												_opcode,_rs,_rt,_rd,_immd);

RegFetchUnit:  RegUnitFetch port map(_rs,_rt,_rd,_writeData, _busA,_busB,_Regwrite,_RegDst,_immd,_ExtImmd);
																									


end arch; 